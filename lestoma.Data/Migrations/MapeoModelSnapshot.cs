// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using lestoma.Data;

namespace lestoma.Data.Migrations
{
    [DbContext(typeof(Mapeo))]
    partial class MapeoModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("lestoma.Entidades.Models.EActividad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Nombre")
                        .HasColumnType("text")
                        .HasColumnName("nombre_actividad");

                    b.HasKey("Id");

                    b.ToTable("actividad", "superadmin");
                });

            modelBuilder.Entity("lestoma.Entidades.Models.EAplicacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("NombreAplicacion")
                        .HasColumnType("text")
                        .HasColumnName("nombre");

                    b.Property<short>("TiempoExpiracionToken")
                        .HasColumnType("smallint")
                        .HasColumnName("tiempo_expiracion_token");

                    b.HasKey("Id");

                    b.ToTable("aplicacion", "seguridad");
                });

            modelBuilder.Entity("lestoma.Entidades.Models.EAuditoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Accion")
                        .HasColumnType("text")
                        .HasColumnName("accion");

                    b.Property<string>("Data")
                        .HasColumnType("jsonb")
                        .HasColumnName("data");

                    b.Property<DateTime>("FechaGeneracion")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("fecha");

                    b.Property<string>("Ip")
                        .HasColumnType("text")
                        .HasColumnName("ip");

                    b.Property<string>("PKTabla")
                        .HasColumnType("text")
                        .HasColumnName("PK");

                    b.Property<string>("Schema")
                        .HasColumnType("text")
                        .HasColumnName("schema");

                    b.Property<string>("Session")
                        .HasColumnType("text")
                        .HasColumnName("session");

                    b.Property<string>("Tabla")
                        .HasColumnType("text")
                        .HasColumnName("tabla");

                    b.Property<string>("TipoDeAplicacion")
                        .HasColumnType("text")
                        .HasColumnName("tipo_de_aplicacion");

                    b.Property<string>("UsuarioBD")
                        .HasColumnType("text")
                        .HasColumnName("user_bd");

                    b.HasKey("Id");

                    b.ToTable("auditoria", "seguridad");
                });

            modelBuilder.Entity("lestoma.Entidades.Models.EBuzon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Descripcion")
                        .HasColumnType("json")
                        .HasColumnName("descripcion");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("fecha_creacion");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("integer")
                        .HasColumnName("usuario_id");

                    b.HasKey("Id");

                    b.ToTable("buzon", "reportes");
                });

            modelBuilder.Entity("lestoma.Entidades.Models.EEstadoUsuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("DescripcionEstado")
                        .HasColumnType("text")
                        .HasColumnName("descripcion");

                    b.HasKey("Id");

                    b.ToTable("estado_usuario", "usuarios");
                });

            modelBuilder.Entity("lestoma.Entidades.Models.ERol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("NombreRol")
                        .HasColumnType("text")
                        .HasColumnName("nombre_rol");

                    b.HasKey("Id");

                    b.ToTable("rol", "usuarios");
                });

            modelBuilder.Entity("lestoma.Entidades.Models.ESuperAdministrador", b =>
                {
                    b.Property<short>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<short>("UsuarioId")
                        .HasColumnType("smallint")
                        .HasColumnName("usuario_id");

                    b.HasKey("Id");

                    b.ToTable("super_administrador", "superadmin");
                });

            modelBuilder.Entity("lestoma.Entidades.Models.EUpa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CantidadActividades")
                        .HasColumnType("text")
                        .HasColumnName("cantidad_actividades");

                    b.Property<string>("Nombre")
                        .HasColumnType("text")
                        .HasColumnName("nombre_upa");

                    b.Property<int>("SuperAdminId")
                        .HasColumnType("integer")
                        .HasColumnName("superadmin_id");

                    b.HasKey("Id");

                    b.ToTable("upa", "superadmin");
                });

            modelBuilder.Entity("lestoma.Entidades.Models.EUpaActividad", b =>
                {
                    b.Property<int>("UpaId")
                        .HasColumnType("integer")
                        .HasColumnName("upa_id");

                    b.Property<int>("ActividadId")
                        .HasColumnType("integer")
                        .HasColumnName("actividad_id");

                    b.Property<string>("Descripcion")
                        .HasColumnType("text")
                        .HasColumnName("descripcion");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("fecha_creacion");

                    b.Property<string>("Ip")
                        .HasColumnType("text")
                        .HasColumnName("ip");

                    b.Property<string>("Session")
                        .HasColumnType("text")
                        .HasColumnName("session");

                    b.Property<string>("TipoDeAplicacion")
                        .HasColumnType("text")
                        .HasColumnName("tipo_de_aplicacion");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("integer")
                        .HasColumnName("usuario_id");

                    b.HasKey("UpaId", "ActividadId");

                    b.HasIndex("ActividadId");

                    b.ToTable("upa_actividad", "superadmin");
                });

            modelBuilder.Entity("lestoma.Entidades.Models.EUsuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Apellido")
                        .HasColumnType("text")
                        .HasColumnName("apellido");

                    b.Property<string>("Clave")
                        .HasColumnType("text")
                        .HasColumnName("clave");

                    b.Property<string>("CodigoRecuperacion")
                        .HasColumnType("text")
                        .HasColumnName("codigo_recuperacion");

                    b.Property<string>("Email")
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<int>("EstadoId")
                        .HasColumnType("integer")
                        .HasColumnName("estado_id");

                    b.Property<DateTime?>("FechaVencimientoCodigo")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("vencimiento_codigo_recuperacion");

                    b.Property<string>("Ip")
                        .HasColumnType("text")
                        .HasColumnName("ip");

                    b.Property<string>("Nombre")
                        .HasColumnType("text")
                        .HasColumnName("nombre");

                    b.Property<int>("RolId")
                        .HasColumnType("integer")
                        .HasColumnName("rol_id");

                    b.Property<string>("Salt")
                        .HasColumnType("text")
                        .HasColumnName("semilla");

                    b.Property<string>("Session")
                        .HasColumnType("text")
                        .HasColumnName("session");

                    b.Property<string>("TipoDeAplicacion")
                        .HasColumnType("text")
                        .HasColumnName("tipo_de_aplicacion");

                    b.HasKey("Id");

                    b.HasIndex("EstadoId");

                    b.HasIndex("RolId");

                    b.ToTable("usuario", "usuarios");
                });

            modelBuilder.Entity("lestoma.Entidades.Models.EUpaActividad", b =>
                {
                    b.HasOne("lestoma.Entidades.Models.EActividad", "Actividad")
                        .WithMany("Actividades")
                        .HasForeignKey("ActividadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("lestoma.Entidades.Models.EUpa", "Upa")
                        .WithMany("Upas")
                        .HasForeignKey("UpaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Actividad");

                    b.Navigation("Upa");
                });

            modelBuilder.Entity("lestoma.Entidades.Models.EUsuario", b =>
                {
                    b.HasOne("lestoma.Entidades.Models.EEstadoUsuario", "EstadoUsuario")
                        .WithMany("Usuarios")
                        .HasForeignKey("EstadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("lestoma.Entidades.Models.ERol", "Rol")
                        .WithMany("Usuarios")
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsMany("lestoma.Entidades.Models.ETokensUsuarioByAplicacion", "RefreshTokens", b1 =>
                        {
                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer")
                                .HasColumnName("id")
                                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                            b1.Property<int>("AplicacionId")
                                .HasColumnType("integer")
                                .HasColumnName("aplicacion_id");

                            b1.Property<DateTime>("Created")
                                .HasColumnType("timestamp without time zone")
                                .HasColumnName("fecha_creacion");

                            b1.Property<string>("CreatedByIp")
                                .HasColumnType("text")
                                .HasColumnName("creado_por_ip");

                            b1.Property<DateTime>("Expires")
                                .HasColumnType("timestamp without time zone")
                                .HasColumnName("expiracion");

                            b1.Property<string>("ReplacedByToken")
                                .HasColumnType("text")
                                .HasColumnName("reeemplazado_por_token");

                            b1.Property<DateTime?>("Revoked")
                                .HasColumnType("timestamp without time zone")
                                .HasColumnName("fecha_revocacion");

                            b1.Property<string>("RevokedByIp")
                                .HasColumnType("text")
                                .HasColumnName("revocado_por_ip");

                            b1.Property<string>("Token")
                                .HasColumnType("text")
                                .HasColumnName("token");

                            b1.Property<int>("usuario_id")
                                .HasColumnType("integer");

                            b1.HasKey("Id");

                            b1.HasIndex("usuario_id");

                            b1.ToTable("tokens_usuario_por_aplicacion", "seguridad");

                            b1.WithOwner()
                                .HasForeignKey("usuario_id");
                        });

                    b.Navigation("EstadoUsuario");

                    b.Navigation("RefreshTokens");

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("lestoma.Entidades.Models.EActividad", b =>
                {
                    b.Navigation("Actividades");
                });

            modelBuilder.Entity("lestoma.Entidades.Models.EEstadoUsuario", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("lestoma.Entidades.Models.ERol", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("lestoma.Entidades.Models.EUpa", b =>
                {
                    b.Navigation("Upas");
                });
#pragma warning restore 612, 618
        }
    }
}
